#!/usr/bin/env ruby
# encoding: UTF-8

require_relative '../lib/xcode-build-times.rb'

options = {
  :events_file_path => '${HOME}/.timings.xcode',
  :command => 'unknown'
}

arguments = ARGV.clone
until arguments.empty?
  item = arguments.shift
  argumentProjectPath = arguments.shift
  projectPath = argumentProjectPath.nil? ? Dir.pwd : argumentProjectPath
  case item
  when 'install'
    options[:command] = item
    options[:inject_path] = projectPath
  when 'uninstall'
    options[:command] = item
    options[:inject_path] = projectPath
  when 'generate'
    options[:command] = item
  when '--events-file'
    options[:events_file_path] = argumentProjectPath
  else
    puts '[?PARAMETER?] '.yellow + "Unknown parameter #{item}"
  end
end

buildtimer = XcodeBuildTimer.new(options)
case options[:command]
when 'generate'
  buildtimer.generate_events_js
when 'install'
  puts '[?PATH?]'.yellow + 'Please provide path' unless options[:inject_path]
  buildtimer.inject_timings_to_all_projects
when 'uninstall'
  puts '[?PATH?]'.yellow + 'Please provide path' unless options[:inject_path]
  buildtimer.remove_timings_from_all_projects
else
  puts '[HELP] '.yellow + 'Run ' + 'xcode-build-time.rb install   <path>'.magenta + ' to install build script phases in all .xcodeproj files in specified dir' + "\n" +
       '[HELP] '.yellow + 'Run ' + 'xcode-build-time.rb uninstall <path>'.magenta + ' to uninstall build script phases from all .xcodeproj files in specified dir' + "\n" +
       '[HELP] '.yellow + 'Run ' + 'xcode-build-time.rb generate        '.magenta + ' to generate events for visualization after build' + "\n" +
       '[HELP] '.yellow + 'OPTIONS' + "\n" +
       '[HELP] '.yellow + ' --events-file [path] '.magenta + ' Specifies where events should be stored to or read from on generation '

end
